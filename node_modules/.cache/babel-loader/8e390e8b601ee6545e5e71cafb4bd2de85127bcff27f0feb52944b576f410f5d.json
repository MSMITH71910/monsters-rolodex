{"ast":null,"code":"import React,{Component}from'react';import'./App.css';import MonsterCard from'./components/MonsterCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(){super();// Event handler for search input\nthis.handleSearchChange=event=>{const searchField=event.target.value.toLowerCase();const filteredMonsters=this.state.monsters.filter(monster=>monster.name.toLowerCase().includes(searchField));this.setState({searchField,filteredMonsters});};// Sort monsters by a given attribute\nthis.sortMonsters=sortBy=>{const{filteredMonsters}=this.state;const sortedMonsters=[...filteredMonsters].sort((a,b)=>{if(a[sortBy]<b[sortBy])return-1;if(a[sortBy]>b[sortBy])return 1;return 0;});this.setState({filteredMonsters:sortedMonsters});};this.state={monsters:[],// List of all monsters\nsearchField:'',// Search input value\nfilteredMonsters:[]// Filtered list of monsters\n};}componentDidMount(){// Fetch monsters from an API\nfetch('https://jsonplaceholder.typicode.com/users')// Example API\n.then(response=>response.json()).then(users=>this.setState({monsters:users,filteredMonsters:users})).catch(error=>console.error('Error fetching data:',error));}render(){const{filteredMonsters,searchField}=this.state;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Monsters Rolodex\"}),/*#__PURE__*/_jsx(\"input\",{type:\"search\",placeholder:\"Search monsters\",value:searchField,onChange:this.handleSearchChange,className:\"search-box\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sort-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>this.sortMonsters('name'),children:\"Sort by Name\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>this.sortMonsters('email'),children:\"Sort by Email\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"monster-list\",children:filteredMonsters.map(monster=>/*#__PURE__*/_jsx(MonsterCard,{monster:monster},monster.id))})]});}}export default App;","map":{"version":3,"names":["React","Component","MonsterCard","jsx","_jsx","jsxs","_jsxs","App","constructor","handleSearchChange","event","searchField","target","value","toLowerCase","filteredMonsters","state","monsters","filter","monster","name","includes","setState","sortMonsters","sortBy","sortedMonsters","sort","a","b","componentDidMount","fetch","then","response","json","users","catch","error","console","render","className","children","type","placeholder","onChange","onClick","map","id"],"sources":["/home/msmith/monsters-rolodex/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport MonsterCard from './components/MonsterCard';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [], // List of all monsters\n      searchField: '', // Search input value\n      filteredMonsters: [], // Filtered list of monsters\n    };\n  }\n\n  componentDidMount() {\n    // Fetch monsters from an API\n    fetch('https://jsonplaceholder.typicode.com/users') // Example API\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users, filteredMonsters: users }))\n      .catch((error) => console.error('Error fetching data:', error));\n  }\n\n  // Event handler for search input\n  handleSearchChange = (event) => {\n    const searchField = event.target.value.toLowerCase();\n    const filteredMonsters = this.state.monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField)\n    );\n    this.setState({ searchField, filteredMonsters });\n  };\n\n  // Sort monsters by a given attribute\n  sortMonsters = (sortBy) => {\n    const { filteredMonsters } = this.state;\n    const sortedMonsters = [...filteredMonsters].sort((a, b) => {\n      if (a[sortBy] < b[sortBy]) return -1;\n      if (a[sortBy] > b[sortBy]) return 1;\n      return 0;\n    });\n    this.setState({ filteredMonsters: sortedMonsters });\n  };\n\n  render() {\n    const { filteredMonsters, searchField } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Monsters Rolodex</h1>\n          <input\n            type=\"search\"\n            placeholder=\"Search monsters\"\n            value={searchField}\n            onChange={this.handleSearchChange}\n            className=\"search-box\"\n          />\n          <div className=\"sort-buttons\">\n            <button onClick={() => this.sortMonsters('name')}>Sort by Name</button>\n            <button onClick={() => this.sortMonsters('email')}>Sort by Email</button>\n          </div>\n        </header>\n        <div className=\"monster-list\">\n          {filteredMonsters.map((monster) => (\n            <MonsterCard key={monster.id} monster={monster} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}