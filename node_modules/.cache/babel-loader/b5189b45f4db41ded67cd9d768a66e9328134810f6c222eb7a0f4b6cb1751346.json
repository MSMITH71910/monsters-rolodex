{"ast":null,"code":"var _jsxFileName = \"/home/msmith/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport MonsterCard from './components/MonsterCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    // Event handler for search input\n    this.handleSearchChange = event => {\n      const searchField = event.target.value.toLowerCase();\n      const filteredMonsters = this.state.monsters.filter(monster => monster.name.toLowerCase().includes(searchField));\n      this.setState({\n        searchField,\n        filteredMonsters\n      });\n    };\n    // Sort monsters by a given attribute\n    this.sortMonsters = sortBy => {\n      const {\n        filteredMonsters\n      } = this.state;\n      const sortedMonsters = [...filteredMonsters].sort((a, b) => {\n        if (a[sortBy] < b[sortBy]) return -1;\n        if (a[sortBy] > b[sortBy]) return 1;\n        return 0;\n      });\n      this.setState({\n        filteredMonsters: sortedMonsters\n      });\n    };\n    this.state = {\n      monsters: [],\n      // List of all monsters\n      searchField: '',\n      // Search input value\n      filteredMonsters: [] // Filtered list of monsters\n    };\n  }\n  componentDidMount() {\n    // Fetch monsters from an API\n    fetch('https://jsonplaceholder.typicode.com/users') // Example API\n    .then(response => response.json()).then(users => this.setState({\n      monsters: users,\n      filteredMonsters: users\n    })).catch(error => console.error('Error fetching data:', error));\n  }\n  render() {\n    const {\n      filteredMonsters,\n      searchField\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Monsters Rolodex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search monsters\",\n          value: searchField,\n          onChange: this.handleSearchChange,\n          className: \"search-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monster-list\",\n        children: filteredMonsters.map(monster => /*#__PURE__*/_jsxDEV(MonsterCard, {\n          monster: monster\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","MonsterCard","jsxDEV","_jsxDEV","App","constructor","handleSearchChange","event","searchField","target","value","toLowerCase","filteredMonsters","state","monsters","filter","monster","name","includes","setState","sortMonsters","sortBy","sortedMonsters","sort","a","b","componentDidMount","fetch","then","response","json","users","catch","error","console","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","id"],"sources":["/home/msmith/monsters-rolodex/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport MonsterCard from './components/MonsterCard';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [], // List of all monsters\n      searchField: '', // Search input value\n      filteredMonsters: [], // Filtered list of monsters\n    };\n  }\n\n  componentDidMount() {\n    // Fetch monsters from an API\n    fetch('https://jsonplaceholder.typicode.com/users') // Example API\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users, filteredMonsters: users }))\n      .catch((error) => console.error('Error fetching data:', error));\n  }\n\n  // Event handler for search input\n  handleSearchChange = (event) => {\n    const searchField = event.target.value.toLowerCase();\n    const filteredMonsters = this.state.monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField)\n    );\n    this.setState({ searchField, filteredMonsters });\n  };\n\n  // Sort monsters by a given attribute\n  sortMonsters = (sortBy) => {\n    const { filteredMonsters } = this.state;\n    const sortedMonsters = [...filteredMonsters].sort((a, b) => {\n      if (a[sortBy] < b[sortBy]) return -1;\n      if (a[sortBy] > b[sortBy]) return 1;\n      return 0;\n    });\n    this.setState({ filteredMonsters: sortedMonsters });\n  };\n\n  render() {\n    const { filteredMonsters, searchField } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Monsters Rolodex</h1>\n          <input\n            type=\"search\"\n            placeholder=\"Search monsters\"\n            value={searchField}\n            onChange={this.handleSearchChange}\n            className=\"search-box\"\n          />\n        </header>\n        <div className=\"monster-list\">\n          {filteredMonsters.map((monster) => (\n            <MonsterCard key={monster.id} monster={monster} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}