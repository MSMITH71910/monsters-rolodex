{"ast":null,"code":"var _jsxFileName = \"/home/msmith/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [] // Initialize with an empty array\n    };\n  }\n\n  // Fetch data from an API when the component mounts\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users') // Example API\n    .then(response => response.json()) // Parse the JSON response\n    .then(users => {\n      // Update the state with the fetched data\n      this.setState({\n        monsters: users\n      });\n    }).catch(error => console.error('Error fetching data:', error));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Monster Rolodex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monster-container\",\n        children: this.state.monsters.map(monster => /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: monster.name\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this) // Dynamically render each monster's name\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","catch","error","console","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","monster","name","id"],"sources":["/home/msmith/monsters-rolodex/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [], // Initialize with an empty array\n    };\n  }\n\n  // Fetch data from an API when the component mounts\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users') // Example API\n      .then((response) => response.json()) // Parse the JSON response\n      .then((users) => {\n        // Update the state with the fetched data\n        this.setState({ monsters: users });\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <div className=\"monster-container\">\n          {this.state.monsters.map((monster) => (\n            <h1 key={monster.id}>{monster.name}</h1> // Dynamically render each monster's name\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;EACH;;EAEA;EACAC,iBAAiBA,CAAA,EAAG;IAClBC,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAAA,CACjDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CACpCF,IAAI,CAAEG,KAAK,IAAK;MACf;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEP,QAAQ,EAAEM;MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE;EAEAE,MAAMA,CAAA,EAAG;IACP,oBACEf,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBjB,OAAA;QAAAiB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBrB,OAAA;QAAKgB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/B,IAAI,CAACd,KAAK,CAACC,QAAQ,CAACkB,GAAG,CAAEC,OAAO,iBAC/BvB,OAAA;UAAAiB,QAAA,EAAsBM,OAAO,CAACC;QAAI,GAAzBD,OAAO,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAAC,CAAC;QAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}